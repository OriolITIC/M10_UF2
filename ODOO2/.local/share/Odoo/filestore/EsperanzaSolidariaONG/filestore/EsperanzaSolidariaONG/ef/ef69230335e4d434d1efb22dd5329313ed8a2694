)]}'
{"version": 3, "sources": ["/web/static/tests/legacy/helpers/test_utils_file.js", "/mail/static/tests/tours/discuss_public_tour.js", "/mail/static/tests/tours/mail_channel_as_guest_tour.js", "/mail/static/tests/tours/mail_full_composer_test_tour.js", "/portal/static/tests/tours/portal.js", "/project/static/tests/tours/personal_stage_tour.js", "/project/static/tests/tours/project_sharing_tour.js", "/project/static/tests/tours/project_update_tour_tests.js", "/calendar/static/tests/tours/calendar_tour.js", "/auth_totp/static/tests/totp_flow.js", "/auth_totp_mail/static/tests/totp_flow.js", "/auth_totp_portal/static/tests/totp_portal.js"], "mappings": "AAAA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9JA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtFA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/DA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxzLA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACppTA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA", "sourcesContent": ["odoo.define('web.test_utils_file', function () {\n\"use strict\";\n\n/**\n * FILE Test Utils\n *\n * This module defines various utility functions to help simulate events with\n * files, such as drag-and-drop.\n *\n * Note that all methods defined in this module are exported in the main\n * testUtils file.\n */\n\n\n//------------------------------------------------------------------------------\n// Private functions\n//------------------------------------------------------------------------------\n\n/**\n * Create a fake object 'dataTransfer', linked to some files, which is passed to\n * drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction _createFakeDataTransfer(files) {\n    return {\n        dropEffect: 'all',\n        effectAllowed: 'all',\n        files,\n        getData: function () {\n            return files;\n        },\n        items: [],\n        types: ['Files'],\n    };\n}\n\n//------------------------------------------------------------------------------\n// Public functions\n//------------------------------------------------------------------------------\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nfunction createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error('FileSystem API is not supported');\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([ data.content ], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Drag a file over a DOM element\n *\n * @param {$.Element} $el\n * @param {Object} file must have been created beforehand (@see createFile)\n */\nfunction dragoverFile($el, file) {\n    var ev = new Event('dragover', { bubbles: true });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer(file),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Drop a file on a DOM element.\n *\n * @param {$.Element} $el\n * @param {Object} file must have been created beforehand (@see createFile)\n */\nfunction dropFile($el, file) {\n    var ev = new Event('drop', { bubbles: true, });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer([file]),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Drop some files on a DOM element.\n *\n * @param {$.Element} $el\n * @param {Object[]} files must have been created beforehand (@see createFile)\n */\nfunction dropFiles($el, files) {\n    var ev = new Event('drop', { bubbles: true, });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer(files),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Set files in a file input\n *\n * @param {DOM.Element} el\n * @param {Object[]} files must have been created beforehand\n *   @see testUtils.file.createFile\n */\nfunction inputFiles(el, files) {\n    // could not use _createFakeDataTransfer as el.files assignation will only\n    // work with a real FileList object.\n    const dataTransfer = new window.DataTransfer();\n    for (const file of files) {\n        dataTransfer.items.add(file);\n    }\n    el.files = dataTransfer.files;\n    /**\n     * Changing files programatically is not supposed to trigger the event but\n     * it does in Chrome versions before 73 (which is on runbot), so in that\n     * case there is no need to make a manual dispatch, because it would lead to\n     * the files being added twice.\n     */\n    const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n    if (!chromeVersion || chromeVersion >= 73) {\n        el.dispatchEvent(new Event('change'));\n    }\n}\n\n//------------------------------------------------------------------------------\n// Exposed API\n//------------------------------------------------------------------------------\n\nreturn {\n    createFile: createFile,\n    dragoverFile: dragoverFile,\n    dropFile: dropFile,\n    dropFiles,\n    inputFiles,\n};\n\n});\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('mail/static/tests/tours/discuss_public_tour.js', {\n    test: true,\n}, [{\n    trigger: '.o_DiscussPublicView',\n    extraTrigger: '.o_ThreadView',\n}, {\n    content: \"Check that we are on channel page\",\n    trigger: '.o_ThreadView',\n    run() {\n        if (!window.location.pathname.startsWith('/discuss/channel')) {\n            console.error('Did not automatically redirect to channel page');\n        }\n        // Wait for modules to be loaded or failed for the next step\n        odoo.__DEBUG__.didLogInfo.then(() => {\n            const { missing, failed, unloaded } = odoo.__DEBUG__.jsModules;\n            if ([missing, failed, unloaded].some(arr => arr.length)) {\n                console.error(\"Couldn't load all JS modules.\", JSON.stringify({ missing, failed, unloaded }));\n            }\n            document.body.classList.add('o_mail_channel_public_modules_loaded');\n        });\n    },\n    extraTrigger: '.o_mail_channel_public_modules_loaded',\n}, {\n    content: \"Wait for all modules loaded check in previous step\",\n    trigger: '.o_mail_channel_public_modules_loaded',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('mail/static/tests/tours/mail_channel_as_guest_tour.js', {\n    test: true,\n}, [{\n    content: \"Click join\",\n    trigger: '.o_WelcomeView_joinButton',\n    extraTrigger: '.o_ThreadView',\n}, {\n    content: \"Check that we are on channel page\",\n    trigger: '.o_ThreadView',\n    run() {\n        if (!window.location.pathname.startsWith('/discuss/channel')) {\n            console.error('Clicking on join button did not redirect to channel page');\n        }\n        // Wait for modules to be loaded or failed for the next step\n        odoo.__DEBUG__.didLogInfo.then(() => {\n            const { missing, failed, unloaded } = odoo.__DEBUG__.jsModules;\n            if ([missing, failed, unloaded].some(arr => arr.length)) {\n                console.error(\"Couldn't load all JS modules.\", JSON.stringify({ missing, failed, unloaded }));\n            }\n            document.body.classList.add('o_mail_channel_as_guest_tour_modules_loaded');\n        });\n    },\n    extraTrigger: '.o_mail_channel_as_guest_tour_modules_loaded',\n}, {\n    content: \"Wait for all modules loaded check in previous step\",\n    trigger: '.o_mail_channel_as_guest_tour_modules_loaded',\n}]);\n", "/** @odoo-module **/\n\nimport {\n    createFile,\n    inputFiles,\n} from 'web.test_utils_file';\n\nimport tour from 'web_tour.tour';\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail/tests/test_mail_full_composer.py\n */\ntour.register('mail/static/tests/tours/mail_full_composer_test_tour.js', {\n    test: true,\n}, [{\n    content: \"Click on Send Message\",\n    trigger: '.o_ChatterTopbar_buttonSendMessage',\n}, {\n    content: \"Write something in composer\",\n    trigger: '.o_ComposerTextInput_textarea',\n    run: 'text blahblah',\n}, {\n    content: \"Add one file in composer\",\n    trigger: '.o_Composer_buttonAttachment',\n    async run() {\n        const file = await createFile({\n            content: 'hello, world',\n            contentType: 'text/plain',\n            name: 'text.txt',\n        });\n        inputFiles(\n            document.querySelector('.o_FileUploader_input'),\n            [file]\n        );\n    },\n}, {\n    content: \"Open full composer\",\n    trigger: '.o_Composer_buttonFullComposer',\n    extra_trigger: '.o_AttachmentCard:not(.o-isUploading)' // waiting the attachment to be uploaded\n}, {\n    content: \"Check the earlier provided attachment is listed\",\n    trigger: '.o_AttachmentCard[title=\"text.txt\"]',\n    run() {},\n}, {\n    content: \"Check subject is autofilled\",\n    trigger: 'input[name=\"subject\"]',\n    run() {\n        const subjectValue = document.querySelector('input[name=\"subject\"]').value;\n        if (subjectValue !== \"Re: Test User\") {\n            console.error(\n                `Full composer should have \"Re: Test User\" in subject input (actual: ${subjectValue})`\n            );\n        }\n    },\n}, {\n    content: \"Check composer content is kept\",\n    trigger: '.oe_form_field[name=\"body\"]',\n    run() {\n        const bodyContent = document.querySelector('.oe_form_field[name=\"body\"]').textContent;\n        if (!bodyContent.includes(\"blahblah\")) {\n            console.error(\n                `Full composer should contain text from small composer (\"blahblah\") in body input (actual: ${bodyContent})`\n            );\n        }\n    },\n}, {\n    content: \"Open templates\",\n    trigger: '.o_field_widget[name=\"template_id\"] input',\n}, {\n    content: \"Check a template is listed\",\n    in_modal: false,\n    trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Test template\")',\n    run() {},\n}, {\n    content: \"Send message\",\n    trigger: '.o_mail_send',\n}, {\n    content: \"Check message is shown\",\n    trigger: '.o_Message:contains(\"blahblah\")',\n}, {\n    content: \"Check message contains the attachment\",\n    trigger: '.o_Message .o_AttachmentCard_filename:contains(\"text.txt\")',\n}]);\n", "odoo.define('portal.tour', function (require) {\n'use strict';\n\nvar tour = require(\"web_tour.tour\");\n\ntour.register('portal_load_homepage', {\n    test: true,\n    url: '/my',\n},\n    [\n        {\n            content: \"Check portal is loaded\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n        },\n        {\n            content: \"Load my account details\",\n            trigger: 'input[value=\"Joel Willis\"]'\n        }\n    ]\n);\n\n});\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\ntour.register('personal_stage_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: \"Open Pig Project\",\n    trigger: '.o_kanban_record:contains(\"Pig\")',\n}, {\n    // Default is grouped by stage, user should not be able to create/edit a column\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_quick_create)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_edit)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_delete)\",\n    run: function () {},\n}, {\n    content: \"Go to my tasks\", // My tasks is grouped by personal stage by default\n    trigger: 'a[data-menu-xmlid=\"project.menu_project_management\"]',\n}, {\n    content: \"Check that we can create a new stage\",\n    trigger: '.o_column_quick_create .o_quick_create_folded'\n}, {\n    content: \"Create a new personal stage\",\n    trigger: 'input[placeholder=\"Column title\"]',\n    run: 'text Never',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that column exists\",\n    trigger: '.o_kanban_header:contains(\"Never\")',\n    run: function () {},\n}, {\n    content: 'Open column edit dropdown',\n    trigger: '.o_kanban_header:eq(0)',\n    run: function () {\n        $('.o_kanban_config.dropdown .dropdown-toggle').eq(0).click();\n    },\n}, {\n    content: \"Try editing inbox\",\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    content: \"Change title\",\n    trigger: 'input.o_field_char[name=\"name\"]',\n    run: 'text  (Todo)',\n}, {\n    content: \"Save changes\",\n    trigger: '.btn-primary:contains(\"Save\")',\n}, {\n    content: \"Check that column was updated\",\n    trigger: '.o_kanban_header:contains(\"Todo\")',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('project_sharing_tour', {\n    test: true,\n    url: '/web',\n}, [...tour.stepUtils.goToAppSteps(\"project.menu_main_pm\", 'Go to the Project App.'), {\n    // an invisible element cannot be used as a trigger so this small hack is mandatory for the next step\n    trigger: '.o_kanban_record:contains(\"Project Sharing\")',\n    run: function () {\n        this.$anchor.find('.o_dropdown_kanban').css('visibility', 'visible');\n    },\n}, {\n    trigger: '.oe_kanban_global_click :contains(\"Project Sharing\") .o_dropdown_kanban',\n    content: 'Open the project dropdown.'\n}, {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .dropdown-menu a:contains(\"Share\")',\n    content: 'Start editing the project.',\n}, {\n    trigger: 'div.o_field_radio[name=\"access_mode\"] > div.o_radio_item > input[data-value=\"edit\"]',\n    content: 'Select \"Edit\" as Access mode in the \"Share Project\" wizard.',\n}, {\n    trigger: '.o_field_many2one[name=\"partner_ids\"]',\n    content: 'Select the user portal as collaborator to the \"Project Sharing\" project.',\n    run: function (actions) {\n        actions.text('Georges', this.$anchor.find('input'));\n    },\n}, {\n    trigger: '.ui-autocomplete a:contains(\"Georges\")',\n    in_modal: false,\n}, {\n    trigger: 'footer > button[name=\"action_send_mail\"]',\n    content: 'Confirm the project sharing with this portal user.',\n}, {\n    trigger: '.o_web_client',\n    content: 'Go to project portal view to select the \"Project Sharing\" project',\n    run: function () {\n        window.location.href = window.location.origin + '/my/projects';\n    },\n}, {\n    trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n    content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n}, {\n    trigger: '.o_project_sharing',\n    content: 'Wait the project sharing feature be loaded',\n    run: function () {},\n}, {\n    trigger: 'button.o-kanban-button-new',\n    content: 'Click \"Create\" button',\n    run: 'click',\n}, {\n    trigger: '.o_kanban_quick_create .o_field_widget[name=\"name\"]',\n    content: 'Create Task',\n    run: 'text Test Create Task',\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_edit',\n    content: 'Go to the form view of this new task',\n}, {\n    trigger: 'div.o_statusbar_status[name=\"stage_id\"] button[aria-checked=\"false\"]:contains(Done)',\n    content: 'Change the stage of the task.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body textarea[name=\"message\"]',\n    content: 'Write a message in the chatter of the task',\n    run: 'text I create a new task for testing purpose.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body button[data-action=\"/mail/chatter_post\"]',\n    content: 'Send the message',\n}, {\n    trigger: 'ol.breadcrumb > li.o_back_button > a:contains(Project Sharing)',\n    content: 'Go back to the kanban view',\n}, {\n    trigger: '.o_filter_menu > button',\n    content: 'click on filter menu in the search view',\n}, {\n    trigger: '.o_filter_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: '.o_group_by_menu > button',\n    content: 'click on group by menu in the search view',\n}, {\n    trigger: '.o_group_by_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: '.o_favorite_menu > button',\n    content: 'click on the favorite menu in the search view',\n}, {\n    trigger: '.o_favorite_menu .o_add_favorite > button',\n    content: 'click to \"save current search\" button in favorite menu',\n}, {\n    trigger: 'button.o_switch_view.o_list',\n    content: 'Go to the list view',\n    run: 'click',\n}]);\n\ntour.register('portal_project_sharing_tour', {\n    test: true,\n    url: '/my/projects',\n}, [{\n    trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n    content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n}, {\n    trigger: '.o_project_sharing',\n    content: 'Wait the project sharing feature be loaded',\n    run: function () {},\n}, {\n    trigger: 'button.o-kanban-button-new',\n    content: 'Click \"Create\" button',\n    run: 'click',\n}, {\n    trigger: '.o_kanban_quick_create .o_field_widget[name=\"name\"]',\n    content: 'Create Task',\n    run: 'text Test Create Task',\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_edit',\n    content: 'Go to the form view of this new task',\n}, {\n    trigger: 'div.o_statusbar_status[name=\"stage_id\"] button[aria-checked=\"false\"]:contains(Done)',\n    content: 'Change the stage of the task.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body textarea[name=\"message\"]',\n    content: 'Write a message in the chatter of the task',\n    run: 'text I create a new task for testing purpose.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body button[data-action=\"/mail/chatter_post\"]',\n    content: 'Send the message',\n}, {\n    trigger: 'ol.breadcrumb > li.o_back_button > a:contains(Project Sharing)',\n    content: 'Go back to the kanban view',\n}, {\n    trigger: '.o_filter_menu > button',\n    content: 'click on filter menu in the search view',\n}, {\n    trigger: '.o_filter_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: '.o_group_by_menu > button',\n    content: 'click on group by menu in the search view',\n}, {\n    trigger: '.o_group_by_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: '.o_favorite_menu > button',\n    content: 'click on the favorite menu in the search view',\n}, {\n    trigger: '.o_favorite_menu .o_add_favorite > button',\n    content: 'click to \"save current search\" button in favorite menu',\n}, {\n    trigger: 'button.o_switch_view.o_list',\n    content: 'Go to the list view',\n    run: 'click',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\nfunction openProjectUpdateAndReturnToTasks(view, viewClass) {\n    return [{\n            trigger: '.o_project_updates_breadcrumb',\n            content: 'Open Project Update from view : ' + view,\n            extra_trigger: \".\" + viewClass,\n        }, {\n            trigger: \".o-kanban-button-new\",\n            content: \"Create a new update from project task view : \" + view,\n            extra_trigger: '.o_pupdate_kanban',\n        }, {\n            trigger: \"button.o_form_button_cancel\",\n            content: \"Discard project update from project task view : \" + view,\n        }, {\n            trigger: \".o_switch_view.o_list\",\n            content: \"Go to list of project update from view \" + view,\n        }, {\n            trigger: '.o_back_button',\n            content: 'Go back to the task view : ' + view,\n            extra_trigger: '.o_list_view',\n        },\n    ];\n}\n\ntour.register('project_update_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_project_kanban',\n    width: 200,\n}, {\n    trigger: 'input.o_project_name',\n    run: 'text New Project'\n}, {\n    trigger: '.o_open_tasks',\n    run: function (actions) {\n        actions.auto('.modal:visible .btn.btn-primary');\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    run: function (actions) {\n        actions.text(\"New\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    extra_trigger: '.o_kanban_group',\n    run: function (actions) {\n        actions.text(\"Done\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create input.o_field_char[name=name]',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text New task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create input.o_field_char[name=name]',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text Second task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o_kanban_header:eq(1)',\n    run: function () {\n        $('.o_kanban_config.dropdown .dropdown-toggle').eq(1).click();\n    }\n}, {\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    trigger: \".o_field_widget[name=fold] input\",\n}, {\n    trigger: \".modal-footer button\",\n}, {\n    trigger: \".o_kanban_record .oe_kanban_content\",\n    extra_trigger: '.o_kanban_project_tasks',\n    run: \"drag_and_drop .o_kanban_group:eq(1) \",\n}, {\n    trigger: \".o_project_updates_breadcrumb\",\n    content: 'Open Updates'\n}, {\n    trigger: \".o_add_milestone a\",\n    content: \"Add a first milestone\"\n}, {\n    trigger: \"input.o_field_widget[name=name]\",\n    run: 'text New milestone'\n}, {\n    trigger: \"input.datetimepicker-input[name=deadline]\",\n    run: 'text 12/12/2099'\n}, {\n    trigger: \".modal-footer button\"\n}, {\n    trigger: \".o_add_milestone a\",\n}, {\n    trigger: \"input.o_field_widget[name=name]\",\n    run: 'text Second milestone'\n}, {\n    trigger: \"input.datetimepicker-input[name=deadline]\",\n    run: 'text 12/12/2022'\n}, {\n    trigger: \".modal-footer button\"\n}, {\n    trigger: \".o_open_milestone:eq(1) .o_milestone_detail span:eq(0)\",\n    extra_trigger: \".o_add_milestone a\",\n    run: function () {\n        setTimeout(() => {\n            this.$anchor.click();\n        }, 500);\n    },\n}, {\n    trigger: \"input.datetimepicker-input[name=deadline]\",\n    run: 'text 12/12/2100'\n}, {\n    trigger: \".modal-footer button\"\n}, {\n    trigger: \".o-kanban-button-new\",\n    content: \"Create a new update\"\n}, {\n    trigger: \"input.o_field_widget[name=name]\",\n    run: 'text New update'\n}, {\n    trigger: \".o_form_button_save\"\n}, {\n    trigger: \".o_field_widget[name=description] h1:contains('Activities')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name=description] h3:contains('Milestones')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name=description] div[name='milestone'] ul li:contains('(12/12/2099 => 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name=description] div[name='milestone'] ul li:contains('(due 12/12/2022)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name=description] div[name='milestone'] ul li:contains('(due 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n}, {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Project Updates',\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n    extra_trigger: '.o_list_view',\n}, {\n    trigger: '.o_switch_view.o_graph',\n    content: 'Open Graph View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Graph\", \"o_graph_view\"), {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Tasks',\n    extra_trigger: '.o_graph_view',\n}, ...openProjectUpdateAndReturnToTasks(\"List\", \"o_list_view\"), {\n    trigger: '.o_switch_view.o_pivot',\n    content: 'Open Pivot View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Pivot\", \"o_pivot_view\"), {\n    trigger: '.o_switch_view.o_calendar',\n    content: 'Open Calendar View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Calendar\", \"o_calendar_view\"), {\n    trigger: '.o_switch_view.o_activity',\n    content: 'Open Activity View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Activity\", \"o_activity_view\"),\n]);\n", "odoo.define('calendar.calendar_tour', function (require) {\n    \"use strict\";\n\n    const tour = require('web_tour.tour');\n\n    tour.register('test_calendar_delete_tour', {\n        test: true,\n    },\n    [\n        {\n            content: 'Select filter (everybody)',\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: 'Click on the event (focus + waiting)',\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            }\n        },\n        {\n            content: 'Delete the event',\n            trigger: '.o_cw_popover_delete',\n        },\n        {\n            content: 'Validate the deletion',\n            trigger:'button:contains(\"Ok\")',\n            async run() {\n                $('button:contains(\"Ok\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n            }\n        },\n    ]);\n});\n", "odoo.define('auth_totp.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\nconst ajax = require('web.ajax');\n\nfunction openRoot() {\n    return [{\n        content: \"return to client root to avoid race condition\",\n        trigger: 'body',\n        run() {\n            $('body').addClass('wait');\n            window.location = '/web';\n        }\n    }, {\n        content: \"wait for client reload\",\n        trigger: 'body:not(.wait)',\n        run() {}\n    }];\n}\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .oe_topbar_name',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\ntour.register('totp_tour_setup', {\n    test: true,\n    url: '/web'\n}, [...openUserProfileAtSecurityTab(), {\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text demo', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"When requested to do so\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run(helpers) {\n        const $secret = this.$anchor.closest('div').find('span[name=secret]');\n        const $copyBtn = $secret.find('button');\n        $copyBtn.remove();\n        const secret = $secret.text();\n        ajax.jsonRpc('/totphook', 'call', {\n            secret\n        }).then((token) => {\n            helpers._text(helpers._get_action_values('input[name=code]'), token);\n            helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n            $('body').addClass('got-token')\n        });\n    }\n}, {\n    content: 'wait for rpc',\n    trigger: 'body.got-token',\n    run() {}\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Check that the button has changed\",\n    trigger: 'button[name=action_totp_disable]',\n    run: () => {}\n}]);\n\ntour.register('totp_login_enabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run(helpers) {\n        ajax.jsonRpc('/totphook', 'call', {}).then((token) => {\n            helpers._text(helpers._get_action_values(), token);\n            // FIXME: is there a way to put the button as its own step trigger without\n            //        the tour straight blowing through and not waiting for this?\n            helpers._click(helpers._get_action_values('button:contains(\"Login\")'));\n        });\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run: () => {}\n}]);\n\ntour.register('totp_login_device', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"check remember device box\",\n    trigger: 'label[for=switch-remember]',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run(helpers) {\n        ajax.jsonRpc('/totphook', 'call', {}).then((token) => {\n            helpers._text(helpers._get_action_values(), token);\n            // FIXME: is there a way to put the button as its own step trigger without\n            //        the tour straight blowing through and not waiting for this?\n            helpers._click(helpers._get_action_values('button:contains(\"Login\")'));\n        });\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run: 'click',\n}, {\n    content: \"click the Log out button\",\n    trigger: '.dropdown-item[data-menu=logout]',\n}, {\n    content: \"check that we're back on the login page or go to it\",\n    trigger: 'input#login, a:contains(Log in)'\n}, {\n    content: \"input login again\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password again',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button again\",\n    trigger: 'button:contains(\"Log in\")',\n},  {\n    content: \"check we're logged in without 2FA\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run: () => {}\n},\n// now go and disable two-factor authentication would be annoying to do in a separate tour\n// because we'd need to login & totp again as HttpCase.authenticate can't\n// succeed w/ totp enabled\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_disable]',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text demo', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Check that the button has changed\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n    run: () => {}\n}]);\n\ntour.register('totp_login_disabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n},\n// normally we'd end the tour here as it's all we care about but there are a\n// bunch of ongoing queries from the loading of the web client which cause\n// issues, so go and open the preferences / profile screen to make sure\n// everything settles down\n...openUserProfileAtSecurityTab(),\n]);\n\nconst columns = {};\ntour.register('totp_admin_disables', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), {\n    content: 'Go to settings',\n    trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n}, {\n    content: 'Wait for page',\n    trigger: '.o_menu_brand:contains(\"Settings\")',\n    run: () => {}\n}, {\n    content: \"Open Users menu\",\n    trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n}, {\n    content: \"Open Users view\",\n    trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n    run: function (helpers) {\n        // funny story: the users view we're trying to reach, sometimes we're\n        // already there, but if we re-click the next step executes before the\n        // action has the time to re-load, the one after that doesn't, and our\n        // selection get discarded by the action reloading, so here try to\n        // see if we're already on the users action through the breadcrumb and\n        // just close the menu if so\n        const $crumb = $('.breadcrumb');\n        if ($crumb.text().indexOf('Users') === -1) {\n            // on general settings page, click menu\n            helpers.click();\n        } else {\n            // else close menu\n            helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n        }\n    }\n}, {\n    content: \"Find Demo User\",\n    trigger: 'td.o_data_cell:contains(\"demo\")',\n    run: function (helpers) {\n        const $titles = this.$anchor.closest('table').find('tr:first th');\n        for (let i=0; i<$titles.length; ++i) {\n            columns[$titles[i].getAttribute('data-name')] = i;\n        }\n        const $row = this.$anchor.closest('tr');\n        const sel = $row.find('.o_list_record_selector input[type=checkbox]');\n        helpers.click(sel);\n    }\n}, {\n    content: \"Open Actions menu\",\n    trigger: 'button.dropdown-toggle:contains(\"Action\")'\n}, {\n    content: \"Select totp remover\",\n    trigger: 'a.dropdown-item:contains(Disable two-factor authentication)'\n}, { // enhanced security yo\n    content: \"Check that we have to enter enhanced security mode\",\ntrigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text admin', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user has been de-totp'd\",\n    trigger: \"button[name=action_totp_enable_wizard]\",\n}])\n});\n", "odoo.define('auth_totp_mail.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\n\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .oe_topbar_name',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\nfunction openAccountSettingsTab() {\n    return [{\n        content: 'Go to settings',\n        trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n    }, {\n        content: 'Wait for page',\n        trigger: '.o_menu_brand:contains(\"Settings\")',\n        run: () => {}\n    }, {\n        content: \"Open Users menu\",\n        trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n    }, {\n        content: \"Open Users view\",\n        trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n        run: function (helpers) {\n            // funny story: the users view we're trying to reach, sometimes we're\n            // already there, but if we re-click the next step executes before the\n            // action has the time to re-load, the one after that doesn't, and our\n            // selection get discarded by the action reloading, so here try to\n            // see if we're already on the users action through the breadcrumb and\n            // just close the menu if so\n            const $crumb = $('.breadcrumb');\n            if ($crumb.text().indexOf('Users') === -1) {\n                // on general settings page, click menu\n                helpers.click();\n            } else {\n                // else close menu\n                helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n            }\n        }\n    }];\n}\n\ntour.register('totp_admin_self_invite', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(admin)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that user cannot invite himself to use 2FA.\",\n    trigger: \"body\",\n    run: function () {\n        var $inviteBtn = $('button:contains(Invite to use 2FA)');\n        if ($inviteBtn.hasClass('o_invisible_modifier')) {\n            $('body').addClass('CannotInviteYourself');\n        }\n    }\n}, {\n    content: \"check that user cannot invite themself.\",\n    trigger: \"body.CannotInviteYourself\"\n}]);\n\ntour.register('totp_admin_invite', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user can be invited to use 2FA.\",\n    trigger: \"button:contains(Invite to use 2FA)\",\n}]);\n\n});", "odoo.define('auth_totp_portal.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\nconst ajax = require('web.ajax');\n\ntour.register('totportal_tour_setup', {\n    test: true,\n    url: '/my/security'\n}, [{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_enable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"scan the barcode below\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run: async function(helpers) {\n        const secret = this.$anchor.closest('div').find('span[name=\"secret\"]').text();\n        const token = await ajax.jsonRpc('/totphook', 'call', {\n            secret\n        });\n        helpers._text(helpers._get_action_values('input[name=code]'), token);\n        helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n    }\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Disable two-factor authentication)',\n    run: () => {}\n}]);\n\ntour.register('totportal_login_enabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run: async function (helpers) {\n        const token = await ajax.jsonRpc('/totphook', 'call', {});\n        helpers._text(helpers._get_action_values(), token);\n        // FIXME: is there a way to put the button as its own step trigger without\n        //        the tour straight blowing through and not waiting for this?\n        helpers._click(helpers._get_action_values('button:contains(\"Login\")'));\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(Documents)\",\n    run: () => {}\n}, {\n    content: \"go back to security\",\n    trigger: \"a:contains(Security)\",\n},{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_disable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Enable two-factor authentication)',\n    run: () => {}\n}]);\n\ntour.register('totportal_login_disabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(Documents)\",\n    run: () => {}\n}]);\n});\n"], "file": "/web/assets/893-7d0fed4/web.assets_tests.js", "sourceRoot": "../../../"}